syntax = "proto3";

package istio.envoy.config.filter.http.payload_validator.v3alpha1;

import "envoy/config/core/v3/base.proto";
import "envoy/type/http_status.proto";

import "google/protobuf/wrappers.proto";

import "validate/validate.proto";

option go_package = "istio.io/api/envoy/config/filter/http/payloadvalidator/v3alpha1";

// [#protodoc-title: Payload Validator]

message PayloadDescription {
  string type = 1;
  string schema = 2;
}

message ResponseDescription {
  .envoy.type.HttpStatus http_status = 1 [(validate.rules).message = {required: true}];
  PayloadDescription response_body = 2;
}

message TransactionDescription {
  .envoy.config.core.v3.RequestMethod method = 1 [(validate.rules).enum = {defined_only: true}];
  PayloadDescription request_body = 2;
  google.protobuf.UInt32Value request_max_size = 3;
  repeated ResponseDescription responses = 4;
}

// Payload Validator filter config.
message PayloadValidator {
  string stat_prefix = 1 [(validate.rules).string = {min_len: 1}];
  repeated TransactionDescription operations = 2 [(validate.rules).repeated = {min_items: 1}];
}
